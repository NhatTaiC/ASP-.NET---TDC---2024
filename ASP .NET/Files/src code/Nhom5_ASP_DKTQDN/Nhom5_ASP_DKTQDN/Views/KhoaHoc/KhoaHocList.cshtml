@using X.PagedList
@using X.PagedList.Mvc.Core
@model IEnumerable<Nhom5_ASP_DKTQDN.Models.KhoaHoc>

@{
    ViewData["Title"] = "Danh sách khóa học";
    Layout = "~/Views/Shared/_Layout - Admin.cshtml";
}

<h1>Danh sách khóa học</h1>

<p>
    <a type="button" class="btn btn-primary" asp-action="CreateKhoaHoc">Thêm</a>
</p>
<table class="table table-sm">
    <thead>
        <tr>
            <th>
                Mã khóa học
            </th>
            <th>
                Năm bắt đầu
            </th>
            <th>
               Năm kết thúc
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.MaKhoaHoc)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NamBatDau)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NamKetThuc)
            </td>
            <td>
                    <a type="button" class="btn btn-warning" asp-action="EditKhoaHoc" asp-route-id="@item.Id">Sửa</a>
                    <a type="button" class="btn btn-danger" onclick="confirmDelete(@item.Id)" @* asp-action="DeleteKhoaHoc" asp-route-id="@item.Id" *@>Xóa</a>
            </td>
        </tr>
}
    </tbody>
</table>
@Html.PagedListPager((IPagedList)Model, page => Url.Action("KhoaHocList",
        new { page = page }),
        new X.PagedList.Mvc.Core.PagedListRenderOptions
    {
        ContainerDivClasses = new[] { "navigation" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    }
        )
@{
    var successMessageDelete = TempData["SuccessMessageDelete"] as string;
    var successMessageCreate = TempData["SuccessMessageCreate"] as string;
    var successMessageUpdate = TempData["SuccessMessageUpdate"] as string;
}

@if (!string.IsNullOrEmpty(successMessageDelete))
{
    <script>
        Swal.fire({
            title: 'Thông báo',
            text: 'Xóa thành công!',
            icon: 'success',
            confirmButtonText: 'Đóng'
        });
    </script>
}
@if (!string.IsNullOrEmpty(successMessageCreate))
{
    <script>
        Swal.fire({
            title: 'Thông báo',
            text: 'Thêm thành công!',
            icon: 'success',
            confirmButtonText: 'Đóng'
        });
    </script>
}
@if (!string.IsNullOrEmpty(successMessageUpdate))
{
    <script>
        Swal.fire({
            title: 'Thông báo',
            text: 'Sửa thành công!',
            icon: 'success',
            confirmButtonText: 'Đóng'
        });
    </script>
}
<script>
    function confirmDelete(id) {
        Swal.fire({
            title: 'Bạn có chắc chắn muốn xóa?',
            text: "Hành động này không thể hoàn tác!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Xác nhận',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/KhoaHoc/DeleteKhoaHoc/' + id;
            }
        });
    }
</script>
